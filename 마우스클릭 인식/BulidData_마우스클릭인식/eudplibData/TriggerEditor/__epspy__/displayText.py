## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import PluginVariables as msqcvar;
import PluginVariables as msqcvar
# (Line 2) import System as sys;
import System as sys
# (Line 4) const t = StringBuffer(1024); //이 스트링버퍼는 만들어둔 텍스트를 담아둬야 하기 때문에 간단한 출력용으로는
t = _CGFW(lambda: [StringBuffer(1024)], 1)[0]
# (Line 5) const s = StringBuffer(1024); //따로 스트링버퍼를 하나 더 만들어서 이친구로 간단출력을 해야함.
s = _CGFW(lambda: [StringBuffer(1024)], 1)[0]
# (Line 7) var color1 = 0; var color2 = 0;
color1 = EUDCreateVariables(1)
_IGVA([color1], lambda: [0])
color2 = EUDCreateVariables(1)
_IGVA([color2], lambda: [0])
# (Line 9) function displayAction1(cp); //c언어처럼 미리 함수를 선언해서 에러가 뜨지 않게 함.
# (Line 10) function displayText1(cp){ //상대좌표를 이용한 텍스트
@EUDFunc
def f_displayText1(cp):
    # (Line 11) if(IsUserCP()){
    if EUDIf()(IsUserCP()):
        # (Line 14) const mmX = sys.mouseX;
        mmX = sys.mouseX
        # (Line 15) const mmY = sys.mouseY;
        mmY = sys.mouseY
        # (Line 16) if(40 <= mmX && mmX <= 243 && 160 <= mmY && mmY <= 172){if(color1 == 0){color1 = 1; sys.textUpdate[cp] = 1;}}
        if EUDIf()(EUDSCAnd()(40 <= mmX)(mmX <= 243)(160 <= mmY)(mmY <= 172)()):
            if EUDIf()(color1 == 0):
                color1 << (1)
                _ARRW(sys.textUpdate, cp) << (1)
            EUDEndIf()
            # (Line 17) else{if(color1 == 1){color1 = 0; sys.textUpdate[cp] = 1;}}
        if EUDElse()():
            if EUDIf()(color1 == 1):
                color1 << (0)
                _ARRW(sys.textUpdate, cp) << (1)
            EUDEndIf()
            # (Line 18) if(40 <= mmX && mmX <= 243 && 177 <= mmY && mmY <= 189){if(color2 == 0){color2 = 1; sys.textUpdate[cp] = 1;}}
        EUDEndIf()
        if EUDIf()(EUDSCAnd()(40 <= mmX)(mmX <= 243)(177 <= mmY)(mmY <= 189)()):
            if EUDIf()(color2 == 0):
                color2 << (1)
                _ARRW(sys.textUpdate, cp) << (1)
            EUDEndIf()
            # (Line 19) else{if(color2 == 1){color2 = 0; sys.textUpdate[cp] = 1;}}
        if EUDElse()():
            if EUDIf()(color2 == 1):
                color2 << (0)
                _ARRW(sys.textUpdate, cp) << (1)
            EUDEndIf()
            # (Line 20) if(sys.textUpdate[cp] > 0){
        EUDEndIf()
        if EUDIf()(sys.textUpdate[cp] <= 0, neg=True):
            # (Line 21) sys.textUpdate[cp] = 0;
            _ARRW(sys.textUpdate, cp) << (0)
            # (Line 22) t.insert(0);
            t.insert(0)
            # (Line 23) t.append("\x1E━━━━\x02━━━━\x04━━━상대좌표━━━\x02━━━━\x1E━━━━\n");
            t.append("\x1E━━━━\x02━━━━\x04━━━상대좌표━━━\x02━━━━\x1E━━━━\n")
            # (Line 24) t.append("\n");
            t.append("\n")
            # (Line 25) t.append("        \x02",ptr2s(sys.colorL[color1]),"[ 여기에 마우스를 올리면 색이 바뀌어요! ]\n");
            t.append("        \x02", ptr2s(sys.colorL[color1]), "[ 여기에 마우스를 올리면 색이 바뀌어요! ]\n")
            # (Line 26) t.append("        \x02",ptr2s(sys.colorL[color2]),"[ 여기에 마우스를 올리면 색이 바뀌어요! ]\n");
            t.append("        \x02", ptr2s(sys.colorL[color2]), "[ 여기에 마우스를 올리면 색이 바뀌어요! ]\n")
            # (Line 27) t.append("\n");
            t.append("\n")
            # (Line 28) t.append("\x1E━━━━\x02━━━━\x04━━━━━━━━━━\x02━━━━\x1E━━━━");
            t.append("\x1E━━━━\x02━━━━\x04━━━━━━━━━━\x02━━━━\x1E━━━━")
            # (Line 29) }
            # (Line 30) t.DisplayAt(1); //텍스트를 위에서 생성한 후, 생성된 텍스트를 계속 띄워줌.
        EUDEndIf()
        t.DisplayAt(1)
        # (Line 31) }
        # (Line 32) displayAction1(cp);
    EUDEndIf()
    f_displayAction1(cp)
    # (Line 33) }
    # (Line 35) function displayAction1(cp){

@EUDFunc
def f_displayAction1(cp):
    # (Line 36) if(sys.mouseClick[cp] == 1){ //왼클릭 했을 때
    if EUDIf()(sys.mouseClick[cp] == 1):
        # (Line 38) const mmX = sys.mouseUserX[cp];
        mmX = sys.mouseUserX[cp]
        # (Line 39) const mmY = sys.mouseUserY[cp];
        mmY = sys.mouseUserY[cp]
        # (Line 40) if(40 <= mmX && mmX <= 243 && 160 <= mmY && mmY <= 172){
        if EUDIf()(EUDSCAnd()(40 <= mmX)(mmX <= 243)(160 <= mmY)(mmY <= 172)()):
            # (Line 41) s.print("첫번째 리스트를 클릭했네요.");
            s.print("첫번째 리스트를 클릭했네요.")
            # (Line 42) }
            # (Line 43) if(40 <= mmX && mmX <= 243 && 177 <= mmY && mmY <= 189){
        EUDEndIf()
        if EUDIf()(EUDSCAnd()(40 <= mmX)(mmX <= 243)(177 <= mmY)(mmY <= 189)()):
            # (Line 44) s.print("두번째 리스트를 클릭했네요.");
            s.print("두번째 리스트를 클릭했네요.")
            # (Line 45) }
            # (Line 46) }
        EUDEndIf()
        # (Line 47) }
    EUDEndIf()
    # (Line 49) function displayAction2(cp); //c언어처럼 미리 함수를 선언해서 에러가 뜨지 않게 함.

# (Line 50) function displayText2(cp){ //상대좌표와 스크린사이즈를 이용한 중앙정렬 인식
@EUDFunc
def f_displayText2(cp):
    # (Line 51) if(IsUserCP()){
    if EUDIf()(IsUserCP()):
        # (Line 54) const mmX = sys.mouseX+320-sys.screenSizeX;
        mmX = sys.mouseX + 320 - sys.screenSizeX
        # (Line 55) const mmY = sys.mouseY;
        mmY = sys.mouseY
        # (Line 56) if(218 <= mmX && mmX <= 422 && 160 <= mmY && mmY <= 172){if(color1 == 0){color1 = 1; sys.textUpdate[cp] = 1;}}
        if EUDIf()(EUDSCAnd()(218 <= mmX)(mmX <= 422)(160 <= mmY)(mmY <= 172)()):
            if EUDIf()(color1 == 0):
                color1 << (1)
                _ARRW(sys.textUpdate, cp) << (1)
            EUDEndIf()
            # (Line 57) else{if(color1 == 1){color1 = 0; sys.textUpdate[cp] = 1;}}
        if EUDElse()():
            if EUDIf()(color1 == 1):
                color1 << (0)
                _ARRW(sys.textUpdate, cp) << (1)
            EUDEndIf()
            # (Line 58) if(218 <= mmX && mmX <= 422 && 177 <= mmY && mmY <= 189){if(color2 == 0){color2 = 1; sys.textUpdate[cp] = 1;}}
        EUDEndIf()
        if EUDIf()(EUDSCAnd()(218 <= mmX)(mmX <= 422)(177 <= mmY)(mmY <= 189)()):
            if EUDIf()(color2 == 0):
                color2 << (1)
                _ARRW(sys.textUpdate, cp) << (1)
            EUDEndIf()
            # (Line 59) else{if(color2 == 1){color2 = 0; sys.textUpdate[cp] = 1;}}
        if EUDElse()():
            if EUDIf()(color2 == 1):
                color2 << (0)
                _ARRW(sys.textUpdate, cp) << (1)
            EUDEndIf()
            # (Line 60) if(sys.textUpdate[cp] > 0){
        EUDEndIf()
        if EUDIf()(sys.textUpdate[cp] <= 0, neg=True):
            # (Line 61) sys.textUpdate[cp] = 0;
            _ARRW(sys.textUpdate, cp) << (0)
            # (Line 62) t.insert(0);
            t.insert(0)
            # (Line 63) t.append("\x13\x1E━━━━\x02━━━━\x04━━━중앙정렬━━━\x02━━━━\x1E━━━━\n");
            t.append("\x13\x1E━━━━\x02━━━━\x04━━━중앙정렬━━━\x02━━━━\x1E━━━━\n")
            # (Line 64) t.append("\n");
            t.append("\n")
            # (Line 65) t.append("\x13\x02",ptr2s(sys.colorL[color1]),"[ 여기에 마우스를 올리면 색이 바뀌어요! ]\n");
            t.append("\x13\x02", ptr2s(sys.colorL[color1]), "[ 여기에 마우스를 올리면 색이 바뀌어요! ]\n")
            # (Line 66) t.append("\x13\x02",ptr2s(sys.colorL[color2]),"[ 여기에 마우스를 올리면 색이 바뀌어요! ]\n");
            t.append("\x13\x02", ptr2s(sys.colorL[color2]), "[ 여기에 마우스를 올리면 색이 바뀌어요! ]\n")
            # (Line 67) t.append("\n");
            t.append("\n")
            # (Line 68) t.append("\x13\x1E━━━━\x02━━━━\x04━━━━━━━━━━\x02━━━━\x1E━━━━");
            t.append("\x13\x1E━━━━\x02━━━━\x04━━━━━━━━━━\x02━━━━\x1E━━━━")
            # (Line 69) }
            # (Line 70) t.DisplayAt(1); //텍스트를 위에서 생성한 후, 생성된 텍스트를 계속 띄워줌.
        EUDEndIf()
        t.DisplayAt(1)
        # (Line 71) }
        # (Line 72) displayAction2(cp);
    EUDEndIf()
    f_displayAction2(cp)
    # (Line 73) }
    # (Line 75) function displayAction2(cp){

@EUDFunc
def f_displayAction2(cp):
    # (Line 76) if(sys.mouseClick[cp] == 1){ //왼클릭 했을 때
    if EUDIf()(sys.mouseClick[cp] == 1):
        # (Line 78) const mmX = sys.mouseUserX[cp]+320-sys.screenUserX[cp];
        mmX = sys.mouseUserX[cp] + 320 - sys.screenUserX[cp]
        # (Line 79) const mmY = sys.mouseUserY[cp];
        mmY = sys.mouseUserY[cp]
        # (Line 80) if(218 <= mmX && mmX <= 422 && 160 <= mmY && mmY <= 172){
        if EUDIf()(EUDSCAnd()(218 <= mmX)(mmX <= 422)(160 <= mmY)(mmY <= 172)()):
            # (Line 81) s.print("첫번째 리스트를 클릭했네요.");
            s.print("첫번째 리스트를 클릭했네요.")
            # (Line 82) }
            # (Line 83) if(218 <= mmX && mmX <= 422 && 177 <= mmY && mmY <= 189){
        EUDEndIf()
        if EUDIf()(EUDSCAnd()(218 <= mmX)(mmX <= 422)(177 <= mmY)(mmY <= 189)()):
            # (Line 84) s.print("두번째 리스트를 클릭했네요.");
            s.print("두번째 리스트를 클릭했네요.")
            # (Line 85) }
            # (Line 86) }
        EUDEndIf()
        # (Line 87) }
    EUDEndIf()
