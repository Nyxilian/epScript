var readMode = 1;
var screenGridX = 0;
var screenGridY = 0;
var screenSizeX = 0;
var screenSizeY = 0;
var mouseX = 0;
var mouseY = 0;
const mouseMX = EPD(0x6CDDC4);
const mouseMY = EPD(0x6CDDC8);

const mouseClick = PVariable();
const mouseUserX = PVariable();
const mouseUserY = PVariable();
const screenUserX = PVariable();

const textUpdate = PVariable();
const colorL = [Db("\x04"), Db("\x1F")];
const keyboardStatus = [Db("\x07On"), Db("\x08Off")];

function variableInit(){
	EUDRegisterObjectToNamespace("readMode", readMode);
	EUDRegisterObjectToNamespace("mouseClick", mouseClick);
	EUDRegisterObjectToNamespace("screenSizeX", screenSizeX);
	EUDRegisterObjectToNamespace("mouseUserX", mouseUserX);
	EUDRegisterObjectToNamespace("mouseUserY", mouseUserY);
	EUDRegisterObjectToNamespace("screenUserX", screenUserX);
}

const checkscreenLoc = $L("checkScreen");
function checkScreenMouse(){
    if(IsUserCP()){
        mouseX = dwread_epd_safe(mouseMX);
        mouseY = dwread_epd_safe(mouseMY);
        screenGridX = dwread_epd(EPD(0x62848C));
        screenGridY = dwread_epd(EPD(0x6284A8));
        setloc(checkscreenLoc, 128*16, 128*16); //중앙 (맵사이즈*16, 맵사이즈*16)
        CenterView(checkscreenLoc);
        const ScreenX2 = dwread_epd(EPD(0x62848C));
        const ScreenY2 = dwread_epd(EPD(0x6284A8));
        screenSizeX = 128*16 - ScreenX2;
        screenSizeY = 128*16 - ScreenY2;
        const screenX = screenGridX + screenSizeX;
        const screenY = screenGridY + screenSizeY;
        setloc(checkscreenLoc, screenX, screenY);
        CenterView(checkscreenLoc);
    }
}