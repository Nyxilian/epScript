## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _VARR(items):
    k = EUDVArray(len(items))()
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __ifloordiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov // v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __ifloordiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov // v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import functions as fx;
import functions as fx
# (Line 3) var bossLoc = $L("Boss");
bossLoc = EUDCreateVariables(1)
_IGVA([bossLoc], lambda: [GetLocationIndex("Boss")])
# (Line 4) var bulInitLoc = $L("S61");
bulInitLoc = EUDCreateVariables(1)
_IGVA([bulInitLoc], lambda: [GetLocationIndex("S61")])
# (Line 5) const bul7Loc = [$L("S62"), $L("S63"), $L("S64"), $L("B61"), $L("B62"), $L("B63"), $L("B64")];
bul7Loc = _CGFW(lambda: [_ARR(FlattenList([GetLocationIndex("S62"), GetLocationIndex("S63"), GetLocationIndex("S64"), GetLocationIndex("B61"), GetLocationIndex("B62"), GetLocationIndex("B63"), GetLocationIndex("B64")]))], 1)[0]
# (Line 6) var bul7Time = 0;
bul7Time = EUDCreateVariables(1)
_IGVA([bul7Time], lambda: [0])
# (Line 8) var boss7EPD;
boss7EPD = EUDVariable()
# (Line 9) var boss7Face;
boss7Face = EUDVariable()
# (Line 10) var boss7AttkCycle;
boss7AttkCycle = EUDVariable()
# (Line 11) var boss7TargetEPD;
boss7TargetEPD = EUDVariable()
# (Line 12) var boss7TargetPlayer;
boss7TargetPlayer = EUDVariable()
# (Line 14) const s = StringBuffer(1024);
s = _CGFW(lambda: [StringBuffer(1024)], 1)[0]
# (Line 16) function stage7() {
@EUDFunc
def f_stage7():
    # (Line 17) boss7Face = bread_epd(boss7EPD + 0x21/4, 1);
    boss7Face << (f_bread_epd(boss7EPD + 0x21 // 4, 1))
    # (Line 18) boss7AttkCycle = bread_epd(boss7EPD + 0x55/4, 1);
    boss7AttkCycle << (f_bread_epd(boss7EPD + 0x55 // 4, 1))
    # (Line 20) once {
    if EUDExecuteOnce()():
        # (Line 21) SetMemory(0x657A9C, SetTo, 18);
        # (Line 22) dwwrite(0x6C9858 + 1696 + 184 * 4, 1200);
        DoActions(SetMemory(0x657A9C, SetTo, 18))
        f_dwwrite(0x6C9858 + 1696 + 184 * 4, 1200)
        # (Line 23) bwrite(0x666778 + 14000 + 524 * 1, 10);
        f_bwrite(0x666778 + 14000 + 524 * 1, 10)
        # (Line 24) fx.setBulletDam(6, 5);
        fx.f_setBulletDam(6, 5)
        # (Line 25) fx.setBulletDam(3, 10);
        fx.f_setBulletDam(3, 10)
        # (Line 26) }
        # (Line 28) if(fx.cur_bSwitch() == 0) { //보스 소환
    EUDEndExecuteOnce()
    if EUDIf()(fx.f_cur_bSwitch() == 0):
        # (Line 29) boss7EPD = fx.SetNextUnitEPD();
        boss7EPD << (fx.SetNextUnitEPD())
        # (Line 30) CreateUnit(1, 79, bossLoc, 6);
        # (Line 31) fx.set_bSwitch(1);
        DoActions(CreateUnit(1, 79, bossLoc, 6))
        fx.f_set_bSwitch(1)
        # (Line 32) foreach(cp : EUDLoopPlayer("Human")) {
        for cp in EUDLoopPlayer("Human"):
            # (Line 33) setcurpl(cp);
            f_setcurpl(cp)
            # (Line 34) s.printAt(0, "\n\n\n\n\n\n\n\n\n");
            s.printAt(0, "\n\n\n\n\n\n\n\n\n")
            # (Line 35) s.printAt(2, "\x13\x1E━━━\x02━━━\x04━━ \x1F[ \x08위   험 \x1F]\x04 ━━\x02━━━\x1E━━━\n\n\x13\x07[\x04 Stage \x087 \x07]\n\n\x13\x1E타락한 \x03고위기사\n\n\x13\x1E━━━\x02━━━━\x04━━━━━━━\x02━━━━\x1E━━━━");
            s.printAt(2, "\x13\x1E━━━\x02━━━\x04━━ \x1F[ \x08위   험 \x1F]\x04 ━━\x02━━━\x1E━━━\n\n\x13\x07[\x04 Stage \x087 \x07]\n\n\x13\x1E타락한 \x03고위기사\n\n\x13\x1E━━━\x02━━━━\x04━━━━━━━\x02━━━━\x1E━━━━")
            # (Line 36) }
            # (Line 37) }

        # (Line 39) fx.playerRevive(); //플레이어 소환
    EUDEndIf()
    fx.f_playerRevive()
    # (Line 41) fx.printBossHP(boss7EPD);
    fx.f_printBossHP(boss7EPD)
    # (Line 43) fx.lockdown();
    fx.f_lockdown()
    # (Line 45) if(bul7Time == 72) {
    if EUDIf()(bul7Time == 72):
        # (Line 46) for(var i = 0; i < 7; i++) {
        i = EUDVariable()
        i << (0)
        if EUDWhile()(i >= 7, neg=True):
            def _t4():
                i.__iadd__(1)
            # (Line 47) MoveLocation(bul7Loc[i], 104, 7, bulInitLoc);
            # (Line 48) addloc(bul7Loc[i], rand() % 736, rand() % 736);
            DoActions(MoveLocation(bul7Loc[i], 104, 7, bulInitLoc))
            f_addloc(bul7Loc[i], f_rand() % 736, f_rand() % 736)
            # (Line 49) CreateUnit(1, 13, bul7Loc[i], 7);
            # (Line 50) }
            DoActions(CreateUnit(1, 13, bul7Loc[i], 7))
            # (Line 51) }
            EUDSetContinuePoint()
            _t4()
        EUDEndWhile()
        # (Line 53) if(bul7Time == 96) {
    EUDEndIf()
    if EUDIf()(bul7Time == 96):
        # (Line 54) RemoveUnit(13, 7);
        # (Line 55) for(var i = 0; i < 7; i++) {
        DoActions(RemoveUnit(13, 7))
        i = EUDVariable()
        i << (0)
        if EUDWhile()(i >= 7, neg=True):
            def _t7():
                i.__iadd__(1)
            # (Line 56) CreateUnit(7, 199, bul7Loc[i], 7);
            # (Line 57) setcurpl(7);
            DoActions(CreateUnit(7, 199, bul7Loc[i], 7))
            f_setcurpl(7)
            # (Line 58) RunAIScriptAt("JYDg", bul7Loc[i]);
            # (Line 59) }
            DoActions(RunAIScriptAt("JYDg", bul7Loc[i]))
            # (Line 60) bul7Time = 0;
            EUDSetContinuePoint()
            _t7()
        EUDEndWhile()
        bul7Time << (0)
        # (Line 61) }
        # (Line 62) bul7Time++;
    EUDEndIf()
    bul7Time.__iadd__(1)
    # (Line 64) if(fx.bulletTimer(96) == True) {
    if EUDIf()(fx.f_bulletTimer(96) == True):
        # (Line 65) MoveLocation("B5", 104, 6, bulInitLoc);
        # (Line 66) addloc("B5", rand() % 736, 0);
        DoActions(MoveLocation("B5", 104, 6, bulInitLoc))
        f_addloc("B5", f_rand() % 736, 0)
        # (Line 67) CreateUnit(1, 196, "B5", 6);
        # (Line 68) Order(196, 6, "B5", Move, bossLoc);
        DoActions(CreateUnit(1, 196, "B5", 6))
        # (Line 69) MoveLocation("B5", 104, 6, bulInitLoc);
        DoActions(Order(196, 6, "B5", Move, bossLoc))
        # (Line 70) addloc("B5", 0, rand() % 736);
        DoActions(MoveLocation("B5", 104, 6, bulInitLoc))
        f_addloc("B5", 0, f_rand() % 736)
        # (Line 71) CreateUnit(1, 196, "B5", 6);
        # (Line 72) Order(196, 6, "B5", Move, bossLoc);
        DoActions(CreateUnit(1, 196, "B5", 6))
        # (Line 73) MoveLocation("B5", 104, 6, bulInitLoc);
        DoActions(Order(196, 6, "B5", Move, bossLoc))
        # (Line 74) addloc("B5", rand() % 736, 720);
        DoActions(MoveLocation("B5", 104, 6, bulInitLoc))
        f_addloc("B5", f_rand() % 736, 720)
        # (Line 75) CreateUnit(1, 196, "B5", 6);
        # (Line 76) Order(196, 6, "B5", Move, bossLoc);
        DoActions(CreateUnit(1, 196, "B5", 6))
        # (Line 77) MoveLocation("B5", 104, 6, bulInitLoc);
        DoActions(Order(196, 6, "B5", Move, bossLoc))
        # (Line 78) addloc("B5", 720, rand() % 736);
        DoActions(MoveLocation("B5", 104, 6, bulInitLoc))
        f_addloc("B5", 720, f_rand() % 736)
        # (Line 79) CreateUnit(1, 196, "B5", 6);
        # (Line 80) Order(196, 6, "B5", Move, bossLoc);
        DoActions(CreateUnit(1, 196, "B5", 6))
        # (Line 81) }
        DoActions(Order(196, 6, "B5", Move, bossLoc))
        # (Line 83) GiveUnits(1, 196, 6, bossLoc, 7);
    EUDEndIf()
    # (Line 85) if(fx.bulletTimer(240) == True) {
    DoActions(GiveUnits(1, 196, 6, bossLoc, 7))
    if EUDIf()(fx.f_bulletTimer(240) == True):
        # (Line 86) setcurpl(7);
        f_setcurpl(7)
        # (Line 87) RunAIScriptAt("JYDg", bossLoc);
        # (Line 88) }
        DoActions(RunAIScriptAt("JYDg", bossLoc))
        # (Line 91) if(Deaths(6, Exactly, 1, 79)) {
    EUDEndIf()
    if EUDIf()(Deaths(6, Exactly, 1, 79)):
        # (Line 92) KillUnit(19, Force1);
        # (Line 93) fx.set_bSwitch(0);
        DoActions(KillUnit(19, Force1))
        fx.f_set_bSwitch(0)
        # (Line 94) fx.set_pSwitch(0);
        fx.f_set_pSwitch(0)
        # (Line 95) fx.set_Stage(8);
        fx.f_set_Stage(8)
        # (Line 96) fx.bulletInit();
        fx.f_bulletInit()
        # (Line 97) foreach(cp : EUDLoopPlayer("Human")) {
        for cp in EUDLoopPlayer("Human"):
            # (Line 98) setcurpl(cp);
            f_setcurpl(cp)
            # (Line 99) CenterView("PlayerRevive");
            # (Line 100) Victory();
            DoActions(CenterView("PlayerRevive"))
            # (Line 101) }
            DoActions(Victory())
            # (Line 102) }

        # (Line 103) }
    EUDEndIf()
